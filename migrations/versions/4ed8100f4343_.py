"""empty message

Revision ID: 4ed8100f4343
Revises: None
Create Date: 2016-05-03 16:33:42.859049

"""

# revision identifiers, used by Alembic.
revision = '4ed8100f4343'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('label', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pers_type',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('label', sa.Unicode(length=120), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('label')
    )
    op.create_table('process_type',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('label', sa.Unicode(length=120), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('label')
    )
    op.create_table('persona',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('label', sa.Unicode(length=255), nullable=True),
    sa.Column('description', sa.UnicodeText(), server_default='No description', nullable=True),
    sa.Column('start_date_id', sa.Integer(), nullable=True),
    sa.Column('end_date_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.UnicodeText(), server_default='No text', nullable=True),
    sa.Column('type_name', sa.String(), nullable=True),
    sa.Column('trusted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['end_date_id'], ['date.id'], ),
    sa.ForeignKeyConstraint(['start_date_id'], ['date.id'], ),
    sa.ForeignKeyConstraint(['type_name'], ['pers_type.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('process',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('label', sa.Unicode(length=255), nullable=True),
    sa.Column('description', sa.UnicodeText(), server_default='No description', nullable=True),
    sa.Column('start_date_id', sa.Integer(), nullable=True),
    sa.Column('end_date_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.UnicodeText(), server_default='No text', nullable=True),
    sa.Column('type_name', sa.String(), nullable=True),
    sa.Column('parent_process_id', sa.Integer(), nullable=True),
    sa.Column('trusted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['end_date_id'], ['date.id'], ),
    sa.ForeignKeyConstraint(['parent_process_id'], ['process.id'], ),
    sa.ForeignKeyConstraint(['start_date_id'], ['date.id'], ),
    sa.ForeignKeyConstraint(['type_name'], ['process_type.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('collections_personas',
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], )
    )
    op.create_table('collections_processes',
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.create_table('personas_hist_places',
    sa.Column('hist_place_id', sa.Integer(), nullable=True),
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hist_place_id'], ['hist_place.id'], ),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], )
    )
    op.create_table('personas_hist_regions',
    sa.Column('hist_region_id', sa.Integer(), nullable=True),
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hist_region_id'], ['hist_region.id'], ),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], )
    )
    op.create_table('personas_processes',
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.create_table('processes_hist_places',
    sa.Column('hist_place_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hist_place_id'], ['hist_place.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.create_table('processes_hist_regions',
    sa.Column('hist_region_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hist_region_id'], ['hist_region.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.create_table('processes_subprocesses',
    sa.Column('parent_process_id', sa.Integer(), nullable=True),
    sa.Column('child_process_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_process_id'], ['process.id'], ),
    sa.ForeignKeyConstraint(['parent_process_id'], ['process.id'], )
    )
    op.create_table('geo_region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('label', sa.Unicode(length=255), nullable=True),
    sa.Column('shape_id', sa.Integer(), nullable=True),
    sa.Column('parent_region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_region_id'], ['geo_region.id'], ),
    sa.ForeignKeyConstraint(['shape_id'], ['shape.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('collections_facts',
    sa.Column('fact_id', sa.Integer(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ),
    sa.ForeignKeyConstraint(['fact_id'], ['fact.id'], )
    )
    op.create_table('geo_regions_facts',
    sa.Column('fact_id', sa.Integer(), nullable=True),
    sa.Column('geo_region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fact_id'], ['fact.id'], ),
    sa.ForeignKeyConstraint(['geo_region_id'], ['geo_region.id'], )
    )
    op.create_table('geo_regions_hist_places',
    sa.Column('hist_place_id', sa.Integer(), nullable=True),
    sa.Column('geo_region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['geo_region_id'], ['geo_region.id'], ),
    sa.ForeignKeyConstraint(['hist_place_id'], ['hist_place.id'], )
    )
    op.create_table('geo_regions_hist_regions',
    sa.Column('hist_region_id', sa.Integer(), nullable=True),
    sa.Column('geo_region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['geo_region_id'], ['geo_region.id'], ),
    sa.ForeignKeyConstraint(['hist_region_id'], ['hist_region.id'], )
    )
    op.create_table('geo_regions_processes',
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('geo_region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['geo_region_id'], ['geo_region.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.create_table('personas_facts',
    sa.Column('fact_id', sa.Integer(), nullable=True),
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fact_id'], ['fact.id'], ),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.id'], )
    )
    op.create_table('processes_facts',
    sa.Column('fact_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fact_id'], ['fact.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], )
    )
    op.add_column('shape', sa.Column('processes_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'shape', 'process', ['processes_id'], ['id'])
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shape', type_='foreignkey')
    op.drop_column('shape', 'processes_id')
    op.drop_table('processes_facts')
    op.drop_table('personas_facts')
    op.drop_table('geo_regions_processes')
    op.drop_table('geo_regions_hist_regions')
    op.drop_table('geo_regions_hist_places')
    op.drop_table('geo_regions_facts')
    op.drop_table('collections_facts')
    op.drop_table('geo_region')
    op.drop_table('processes_subprocesses')
    op.drop_table('processes_hist_regions')
    op.drop_table('processes_hist_places')
    op.drop_table('personas_processes')
    op.drop_table('personas_hist_regions')
    op.drop_table('personas_hist_places')
    op.drop_table('collections_processes')
    op.drop_table('collections_personas')
    op.drop_table('process')
    op.drop_table('persona')
    op.drop_table('process_type')
    op.drop_table('pers_type')
    op.drop_table('collection')
    ### end Alembic commands ###
